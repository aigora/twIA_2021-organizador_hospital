#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
#include <string.h>
#include <conio.h>
#include <time.h>

#define N 30
#define B 2
#define DIM 15
#define DIM2 50
#define DIM3 100
#define USUARIO1 "Javier"
#define CONTRASEÑA1 "capricornio420"
#define USUARIO2 "Pablo"
#define CONTRASEÑA2 "capricornio69"
#define USUARIO3 "Jaime"
#define CONTRASEÑA3 "Jej737oqj"
#define LONGITUD 25
#define INTENTOSMAX 5
#define AÑO_ACTUAL 2021

//Definimos la estructura principal
typedef struct {
	char nombre[N];
	char apellidos[N];
	char correo[N];
	char usuario[N];
	char clave[N];
	char re_clave[N];
	char post_clave[N];
	char re_usuario[N];
	int tlf, tlf1;
	int fecha;
	int dia, mes, año;
	int k;
	int edad;
	char fecha_invalida;
	int intento, respuesta;
	int largo, j, m, ny, nym, om, em;//Sirven para poner los acentos.
	char c;

}Cuenta;

typedef struct {
	int    dia_actual, mes_actual, dia_ingreso, mes_ingreso, dias_ingresado, dias_mes, var, i, pat;
	char c, newpac[DIM], paciente_v[DIM2], realizando[DIM3];
	int en, feb, mar, ab, may, jun, jul, ag, sep, oct, nov, dic;
}Cuentap;

//Definimos la estructura necesaria para obtener la fecha

/*void med_1(Cuenta*);//Se pide los datos del nom/ape/correo/fecha_nac
void med_2(Cuenta*);//Se pide usuario/contraseña
void med_3(Cuenta);//Se pide el teléfono

	//FECHA_DE_NACIMIENTO
void nac_1(Cuenta);//Devuelve la edad del médico
void nac_2(Cuenta*);//Inicia la validación de la fecha
void fech_inv(Cuenta);//Se comprueba la fecha es válida.


void intro_1(Cuenta*);//Se pone en la pantalla bienvenido doctor.

void main() {
	Cuenta cuenta1;
	
	med_1(&cuenta1);
	nac_2(&cuenta1);
	fech_inv(cuenta1);
	nac_1(cuenta1);
	nac_2(&cuenta1);
	med_3(cuenta1);
	med_2(&cuenta1);
	intro_1(&cuenta1);
}
	
	void intro_1(Cuenta*cuenta1){
	do {
		system("cls");
		printf("\n\t\t\tIntroduzca sus credenciales\n");
		printf("\n\tUSUARIO: ");
		gets_s(cuenta1->re_usuario);
		printf("\n\tCLAVE: ");
		gets_s(cuenta1->clave);
		cuenta1->k=0;

		if (strcmp(cuenta1->usuario, USUARIO1) == 0 && strcmp(cuenta1->clave, CONTRASEÑA1) == 0 || strcmp(cuenta1->usuario, USUARIO2) == 0 && strcmp(cuenta1->clave, CONTRASEÑA2) == 0 || strcmp(cuenta1->usuario, USUARIO3) == 0 && strcmp(cuenta1->clave, CONTRASEÑA3) == 0 || strcmp(cuenta1->usuario, cuenta1->re_usuario) == 0 && strcmp(cuenta1->clave, cuenta1->post_clave) == 0) {
			cuenta1->intento = 1;

		}
		else {
			printf("\nEl nombre de usuario y/o la clave no son correctos\n");
			cuenta1->k++;
			printf("\nHa consumido %d de sus 5 intentos\n", cuenta1->k);
			getchar();
		}

	}

	while (cuenta1->k < INTENTOSMAX && cuenta1->intento == 0);

	if (cuenta1->intento == 1) {
		printf("\n\n\tBienvenido Doctor\n\n\n");

	}
	else {
		printf("\n\nHa alcanzado el numero maximo de intentos\n\n\n");
	}
	printf("Desea acceder a su perfil");
	printf("\nSi\tNo");

}
//Definimos las funciones 
void med_1(Cuenta* cuenta1) {
	printf("Escriba los datos que se le piden a continuación\n");
	printf("NOMBRE:");
	gets_s(cuenta1->nombre);

	printf("APELIIDOS:");
	gets_s(cuenta1->apellidos);

	printf("CORREO ELECTR%cNICO:", cuenta1->om);
	gets_s(cuenta1->correo);
	cuenta1->j = 0;
	printf("FECHA DE NACIMIENTO (dia mes a%co): ", cuenta1->nym);
	scanf_s("%d%d%d", &cuenta1->dia, &cuenta1->mes, &cuenta1->año);
	cuenta1->intento = 0;
	//Comprobamos si las fechas son validas
}
void med_2 (Cuenta* cuenta1){

		printf("USUARIO:");
		gets_s(cuenta1->usuario);
		getchar();

		printf("CONTRASE%cA (minimo 8 caracteres):", cuenta1->ny);
		gets_s(cuenta1->clave);
		getchar();

		while (cuenta1->clave[cuenta1->j] != '\0')
		{
			cuenta1->largo++;
			if (cuenta1->clave[cuenta1->j] == ' ')
				cuenta1->largo--;
			cuenta1->j++;
		}

		if (cuenta1->largo < 8) {
			printf("OBLIGATORIO 8 CARACTERES\n");
			printf("CONTRASE%cA (minimo 8 caracteres):", cuenta1->ny);
			gets_s(cuenta1->clave);
		}

		printf("REPETIR CONTRASE%cA:", cuenta1->ny);
		gets_s(cuenta1->re_clave);

		if (strcmp(cuenta1->clave, cuenta1->re_clave) == 0) { //&& strcmp(cuenta1->contraseña, cuenta1->re_clave) == 0
			cuenta1->m = 1;
		}
		else {
			printf("Las contraseñas no coinciden");
			printf("\nREPETIR CONTRASE%cA:", cuenta1->ny);
			gets_s(cuenta1->re_clave);
		}
		if (cuenta1->m == 1) {
			printf("Pulse cualquier tecla para continuar");
			cuenta1->k = getchar();
		}

		printf("Si desea consultar su perfil, introduzca su usuario y contraseña");
		scanf_s(" &d", &cuenta1->k);
	}
	void nac_2(Cuenta* cuenta1)
	{
		int dias_mes[] = { 0, 31, 28, 31, 30,
								31, 30, 31, 31,
								 30, 31, 30, 31 };

		cuenta1->fecha_invalida = 's';
		if (cuenta1->mes < 1 || cuenta1->mes > 12) {
			cuenta1->fecha_invalida = 'n';
			cuenta1->k++;

		}
		if (cuenta1->dia < 1 || cuenta1->dia > dias_mes[cuenta1->mes]) {
			cuenta1->fecha_invalida = 'n';
			cuenta1->k++;
		}
		if (cuenta1->k == 3) {
			printf("Se ha llegado al máximo de iteraciones");
			system("cls");
		}

		cuenta1->edad = AÑO_ACTUAL - cuenta1->año;
	}
	void med_3(Cuenta cuenta1) {
		cuenta1.tlf = 0;
		printf("TEL%cFONO:", cuenta1.em);
		scanf_s("%d", &cuenta1.tlf);


		cuenta1.intento = 1;
		while (cuenta1.tlf >= 10)
		{
			cuenta1.tlf = cuenta1.tlf /= 10;
			cuenta1.intento++;
		}
	
		if (cuenta1.intento <= 8) {
			printf("\nNumero de telefono incorrecto");
			printf("\nIntroduzca nuevamente su numero de telefono (9 caracteres)");
			printf("TEL%cFONO:", cuenta1.em);
			scanf_s("%d", &cuenta1.tlf);

		}
	}


	void nac_1(Cuenta cuenta1)
	{
		printf("Edad:  %d\n", cuenta1.edad);
	}

	void fech_inv(Cuenta cuenta1) {
		for (cuenta1.k = 0; cuenta1.k < 4; cuenta1.k++) {

			if (cuenta1.fecha_invalida == 'n') {
				printf("Fecha invalida");
				printf("\nIntroduzca nuevamente los datos (dia mes año):");
				scanf_s("%d%d%d", &cuenta1.dia, &cuenta1.mes, &cuenta1.año);
				nac_2(&cuenta1);
			}
			if (cuenta1.fecha_invalida == 3)
				printf("Ha gastado el maximo de intentos");
		}

	}
	
	


/*BORRADORES
FILE* ej;
	errno_t err;
	err = fopen_s(&ej, "medicos.txt", "w+");
	if (err == 0)
		printf("El archivo datos.txt está abierto\n");
	else
		printf("El archivo datos.txt NO está abierto\n");


	rewind(ej);
	fprintf_s(ej, "Nombre: %s",cuenta1.nombre);
	fprintf_s(ej, "Apellidos: %s",cuenta1.apellidos);
	fprintf_s(ej, "Correo: %s", cuenta1.correo);
	fprintf_s(ej, "Teléfono: %d", cuenta1.tlf);
	fprintf_s(ej, "Fecha de nacimiento: %d/%d/%d", persona1.dia, persona1.mes,persona1.año);

	if (fclose(ej) == NULL)
		printf("\n Archivo cerrado correctamente");
	else
		printf("\n Error en el cierre del archivo");

		int dias_mes[] = { 0, 31, 28, 31, 30,
							31, 30, 31, 31,
							 30, 31, 30, 31 };

	if (persona1.mes < 1 || persona1.mes > 12) {
		printf("Fecha invalida");
		printf("\nIntroduce nuevamente su fecha de nacimiento, recuerde indicar el dia, el mes y el año, respectivamente:");
		scanf_s("%d%d%d", &persona1.dia, &persona1.mes, &persona1.año);
		intento++;

	}
	if (persona1.dia < 1 || persona1.dia > dias_mes[persona1.mes]) {
		fecha_invalida = 'f';
		printf("\nIntroduce nuevamente su fecha de nacimiento, recuerde indicar el dia, el mes y el año, respectivamente:");
		scanf_s("%d%d%d", &persona1.dia, &persona1.mes, &persona1.año);
		intento++;
	}

	if (intento == 3) {

	}
	*/
	//printf("%s", cuenta1->correo);

	/*cuenta1->tlf = 0;
	printf("TEL%cFONO:", cuenta1->em);
	scanf_s("%d", &cuenta1->tlf);


	cuenta1->intento = 1;
	cuenta1->tlf = cuenta1->tlf1;

	printf("%d", cuenta1->tlf);
	while (cuenta1->tlf >= 10)
	{
		cuenta1->tlf = cuenta1->tlf /= 10;
		cuenta1->intento++;
	}
	printf("%d", cuenta1->intento);

	if (cuenta1->intento <= 8) {
		printf("\nNumero de telefono incorrecto");
		printf("\nIntroduzca nuevamente su numero de telefono (9 caracteres)");
		printf("TEL%cFONO:", cuenta1->em);
		scanf_s("%d", &cuenta1->tlf);

	}
	*/

	//nuevo paciente

	void pac_1(Cuenta*);//Se pide los datos del nom/ape/correo/fecha_nac
	void pac_2(Cuenta*);//Se pide usuario/contraseña
	void pac_3(Cuenta);//Se pide el teléfono

		//FECHA_DE_NACIMIENTO
	void nac_3(Cuenta);//Devuelve la edad del médico
	void nac_4(Cuenta*);//Inicia la validación de la fecha
	void fech_inv_1(Cuenta);//Se comprueba la fecha es válida.
	void fecha_act(Cuentap);

	void intro_2(Cuenta*);//Se pone en la pantalla bienvenido doctor.
	
	int  main () {
		Cuenta cuenta1;
		Cuentap cuenta2;

		pac_1(&cuenta1);
		nac_4(&cuenta1);
		fech_inv_1(cuenta1);
		nac_3(cuenta1);
		nac_4(&cuenta1);
		pac_3(cuenta1);

		struct tm newtime;
		__time64_t long_time;
		char timebuf[26];
		errno_t err;



		// Get time as 64-bit integer.
		_time64(&long_time);
		// Convert to local time.
		err = _localtime64_s(&newtime, &long_time);
		if (err)
		{
			printf("Invalid argument to _localtime64_s.");
		}

		// Convert to an ASCII representation.
		err = asctime_s(timebuf, 26, &newtime);
		if (err)
		{
			printf("Invalid argument to asctime_s.");
	
		}
		//printf("%.19s \n", timebuf);
		//printf("%d\n", newtime.tm_hour);//esta es la hora
		//printf("%d", newtime.tm_mday);//esta variable es el dia del mes
		//printf("\n%d", newtime.tm_mon);//mes del año empezando en 0
		cuenta2.mes_actual = newtime.tm_mon + 1;
		//printf("\n%d", mes_actual);//mes del año empezando en enero=1 
		cuenta2.dia_actual = newtime.tm_mday;
		//printf("%d", dia_actual);
		fecha_act(cuenta2);
		intro_2(&cuenta1);
	}

	void intro_2(Cuenta* cuenta1) {
	
			system("cls");
			printf("\n\t\tYa se ha inscrito en el centro médico\n");
			printf("\n\tEn pocos días será indicado su médico correspondiente. ");
			
	}
	//Definimos las funciones 
	void pac_1(Cuenta* cuenta1) {
		printf("Escriba los datos que se le piden a continuación\n");
		printf("NOMBRE:");
		gets_s(cuenta1->nombre);

		printf("APELIIDOS:");
		gets_s(cuenta1->apellidos);

		printf("CORREO ELECTR%cNICO:", cuenta1->om);
		gets_s(cuenta1->correo);
		cuenta1->j = 0;
		printf("FECHA DE NACIMIENTO (dia mes a%co): ", cuenta1->nym);
		scanf_s("%d%d%d", &cuenta1->dia, &cuenta1->mes, &cuenta1->año);
		cuenta1->intento = 0;
		//Comprobamos si las fechas son validas
	}
	

		
	void nac_4(Cuenta* cuenta1)
	{
		int dias_mes[] = { 0, 31, 28, 31, 30,
								31, 30, 31, 31,
								 30, 31, 30, 31 };

		cuenta1->fecha_invalida = 's';
		if (cuenta1->mes < 1 || cuenta1->mes > 12) {
			cuenta1->fecha_invalida = 'n';
			cuenta1->k++;

		}
		if (cuenta1->dia < 1 || cuenta1->dia > dias_mes[cuenta1->mes]) {
			cuenta1->fecha_invalida = 'n';
			cuenta1->k++;
		}
		if (cuenta1->k == 3) {
			printf("Se ha llegado al máximo de iteraciones");
			system("cls");
		}

		cuenta1->edad = AÑO_ACTUAL - cuenta1->año;
	}
	void pac_3(Cuenta cuenta1) {
		cuenta1.tlf = 0;
		printf("TEL%cFONO:", cuenta1.em);
		scanf_s("%d", &cuenta1.tlf);


		cuenta1.intento = 1;
		while (cuenta1.tlf >= 10)
		{
			cuenta1.tlf = cuenta1.tlf /= 10;
			cuenta1.intento++;
		}

		if (cuenta1.intento <= 8) {
			printf("\nNumero de telefono incorrecto");
			printf("\nIntroduzca nuevamente su numero de telefono (9 caracteres)");
			printf("TEL%cFONO:", cuenta1.em);
			scanf_s("%d", &cuenta1.tlf);

		}
	}

	void nac_3(Cuenta cuenta1)
	{
		printf("Edad:  %d\n", cuenta1.edad);
	}

	void fech_inv(Cuenta cuenta1) {
		for (cuenta1.k = 0; cuenta1.k < 4; cuenta1.k++) {

			if (cuenta1.fecha_invalida == 'n') {
				printf("Fecha invalida");
				printf("\nIntroduzca nuevamente los datos (dia mes año):");
				scanf_s("%d%d%d", &cuenta1.dia, &cuenta1.mes, &cuenta1.año);
				nac_4(&cuenta1);
			}
			if (cuenta1.fecha_invalida == 3)
				printf("Ha gastado el maximo de intentos");
		}

	}
	void fech_act(Cuentap cuenta2) {
		//hasta aqui esta lo mismo que en el main code ahora vamos a sacar el resto
	//inicializamos a las variables y hay que genrealizarlo apra todas las fechas posibles de meter
		cuenta2.dia_ingreso = 17;
		cuenta2.mes_ingreso = 9;
		//meto las variables con los dias de cada mes, de momento de 2021 solo ya que feb me puede cambiar
		cuenta2.en = 31, cuenta2.feb = 28, cuenta2.mar = 31, cuenta2.ab = 30, cuenta2.may = 31, cuenta2.jun = 30, cuenta2.jul = 31, cuenta2.ag = 31, cuenta2.sep = 30, cuenta2.oct = 31, cuenta2.nov = 30, cuenta2.dic = 31;
		//voy a diseñar el programa de tal manera que se cuente a pacientes ingresados en 2021 en afdelante, suponiendoq ue es cuando se abrio la clinica.
		do {
			cuenta2.var = 0;
			//system("cls"); ojo aqui que hay que solucionarlo
			printf("\nIntroduce el mes de ingreso (en numero): ");
			scanf_s("%d", &cuenta2.mes_ingreso);
			printf("\nIntroduce el dia de ingreso del paciente(en numero): ");
			scanf_s("%d", &cuenta2.dia_ingreso);




			if (cuenta2.mes_ingreso == cuenta2.mes_actual)
			{
				cuenta2.dias_ingresado = cuenta2.dia_actual - cuenta2.dia_ingreso;
				if (cuenta2.dia_ingreso > cuenta2.dia_actual)
				{
					system("cls");
					printf("\nse ha introducido una fecha incorrecta, por favor introduzca una fecha valida.");
					cuenta2.var = 6;
				}
				else {
					printf("\nEL paciente lleva %d dias ingresado.", cuenta2.dias_ingresado);
				}
			}

			if (cuenta2.mes_ingreso > cuenta2.mes_actual)
			{
				cuenta2.var = 6;
				printf("\nse ha introducido una fecha incorrecta, por favor introduzca una fecha valida.");
			}

			if (cuenta2.mes_ingreso < cuenta2.mes_actual)
			{
				for (cuenta2.i = cuenta2.mes_ingreso; cuenta2.i < cuenta2.mes_actual + 1; cuenta2.i++)
				{
					if (cuenta2.i == 1)
					{
						cuenta2.dias_mes = cuenta2.en;
					}
					if (cuenta2.i == 2)
					{
						cuenta2.dias_mes = cuenta2.feb;
					}
					if (cuenta2.i == 3)
					{
						cuenta2.dias_mes = cuenta2.mar;
					}
					if (cuenta2.i == 4)
					{
						cuenta2.dias_mes = cuenta2.ab;
					}
					if (cuenta2.i == 5)
					{
						cuenta2.dias_mes = cuenta2.may;
					}
					if (cuenta2.i == 6)
					{
						cuenta2.dias_mes = cuenta2.jun = 30;
					}
					if (cuenta2.i == 7)
					{
						cuenta2.dias_mes = cuenta2.jul;
					}
					if (cuenta2.i == 8)
					{
						cuenta2.dias_mes = cuenta2.ag;
					}
					if (cuenta2.i == 9)
					{
						cuenta2.dias_mes = cuenta2.sep;
					}
					if (cuenta2.i == 10)
					{
						cuenta2.dias_mes = cuenta2.oct;
					}
					if (cuenta2.i == 11)
					{
						cuenta2.dias_mes = cuenta2.nov;
					}
					if (cuenta2.i == 12)
					{
						cuenta2.dias_mes = cuenta2.dic;
					}
					if (cuenta2.i == cuenta2.mes_actual)
						cuenta2.pat = cuenta2.dias_mes;
					if (cuenta2.i == cuenta2.mes_ingreso)
					{
						cuenta2.dias_ingresado = cuenta2.dias_ingresado + (cuenta2.dias_mes - cuenta2.dia_ingreso);
					}
					else {
						cuenta2.dias_ingresado = cuenta2.dias_ingresado + cuenta2.dias_mes;
					}
				}

				cuenta2.dias_ingresado = cuenta2.dias_ingresado - (cuenta2.pat - cuenta2.dia_actual);
				printf("\nEl paciente lleva ingresado %d dias.", cuenta2.dias_ingresado);
				if (cuenta2.dia_ingreso > 31)
				{
					system("cls");
					printf("\nse ha introducido una fecha incorrecta, por favor introduzca una fecha valida.");
					cuenta2.var = 6;
				}
			}
		} while (cuenta2.var == 6);
	}
