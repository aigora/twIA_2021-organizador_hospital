#include <stdio.h>
#include <string.h>
#include <malloc.h>
#include <windows.h>
#include <stdlib.h>
#include "SerialClass/SerialClass.h"
#include <math.h>
#include <conio.h>
#include <time.h>
#define DIM 15
#define DIM2 50
#define DIM3 200
#define GUARD 5
#define N 30
#define B 2
#define DIM 15
#define DIM2 50
#define DIM3 100
#define USUARIO1 "Javier"
#define CONTRASEÑA1 "capricornio420"
#define USUARIO2 "Pablo"
#define CONTRASEÑA2 "capricornio69"
#define USUARIO3 "Jaime"
#define CONTRASEÑA3 "Jej737oqj"
#define LONGITUD 25
#define INTENTOSMAX 5
#define AÑO_ACTUAL 2021

//aqui metemos las estructuras de los pacientes y los doctores
typedef struct {
	char nombre[DIM], apellidos[DIM2], sintomas[DIM3], tratamientos[DIM3], alergias[DIM3];
	int edad, habitacion, dia, mes;

}paciente;
typedef struct { //cada doctor y paciente va a tener una variable de tipo estructura con todos sus datos
	char nombre[DIM], apellidos[DIM2], pacientes[DIM2], sala[4], correo[N];
	int edad, dia_ingreso, mes_ingreso;
}doctor;

typedef struct {//Definimos la estructura principal para la creacion de una nueva cuenta
	char nombre[N];
	char apellidos[N];
	char correo[N];
	char usuario[N];
	char clave[N];
	char re_clave[N];
	char post_clave[N];
	char re_usuario[N];
	int tlf, tlf1;
	int fecha;
	int dia, mes, año;
	int k;
	int edad;
	char fecha_invalida;
	int intento, respuesta;
	int largo, j, m, ny, nym, om, em;//Sirven para poner los acentos.
	char c;

}Cuenta;
typedef struct {
	int    dia_actual, mes_actual, dia_ingreso, mes_ingreso, dias_ingresado, dias_mes, var, i, pat;
	char c, newpac[DIM], paciente_v[DIM2], realizando[DIM3];
	int en, feb, mar, ab, may, jun, jul, ag, sep, oct, nov, dic;
}Cuentap;


//aqui metemos todas las funciones
int leer_entero(void);//con esta funcion cojo los caracteres que me permiten elegir datos en el menu evitando sobrecargas
int time_h(int contador);//saca la hora, fecha y dia del ordenador y se lo asigno a variables del main para luego usarlas
void ocupacion_docv(int hora);//las tres siguientes funciones me dan la informacion de un momento concreto de un doctor, cada una corresponde e un doctor
void ocupacion_docj(int hora);
void ocupacion_docjm(int hora);
int dias_ingreasdo(paciente*, int dia_actual, int mes_actual);//me dira los dias que lleva un paciente ingresado y me devolvera un valor entero de tipo int con dicho numero

void med_1(Cuenta*);//Se pide los datos del nom/ape/correo/fecha_nac
void med_2(Cuenta*);//Se pide usuario/contraseña
void med_3(Cuenta);//Se pide el teléfono
//funciones para sacar la fecha de nacimiento
	//FECHA_DE_NACIMIENTO
void nac_1(Cuenta);//Devuelve la edad del médico
void nac_2(Cuenta*);//Inicia la validación de la fecha
void fech_inv(Cuenta);//Se comprueba la fecha es válida.


void intro_1(Cuenta*);//Se pone en la pantalla bienvenido doctor.

int main()//comienza el main
{
	//se declaran las variables locales que se necesitaran
	Serial* Arduino;
	char puerto[] = "COM6";
	char BufferEntrada[200];
	int bytesRecibidos;
	int count = 0;
	char secuencia[4];//hasta aqui las necesarias para la conexion con arduino
	int t = 0, d, e, ñ = 164, contador, comp, dias_ingresado; //variables aleatorias necesarias para el funcionamiento del codigo
	int	dia_actual, mes_actual, var = 0, hora;
	Cuenta cuenta1;//declaro la estructura que se usara para las contraseñas
	char c, newpac[15], paciente_v[DIM3], paciente_jav[DIM3], paciente_jm[DIM3]; //newpac es la cadena para añadir un nuevo paciente a un doctor, c me coge caracteres con la funcion leer_entero
	//meto las variables con los dias de cada mes, de momento de 2021 solo ya que feb me puede cambiar
	//int en = 31, feb = 28, mar = 31, ab = 30, may = 31, jun = 30, jul = 31, ag = 31, sep = 30, oct = 31, nov = 30, dic = 31;
	//voy a diseñar el programa de tal manera que se cuente a pacientes ingresados en 2021 en afdelante, suponiendoq ue es cuando se abrio la clinica.
	for (contador = 0; contador < 3; contador++) //dia_actual, mes_actual, hora //este bucle for me extrae de la funcion time.h los valores que voy a usar en el main
	{
		if (contador == 0){
			hora = time_h(contador);
		}
			
		if (contador == 1) {
			dia_actual = time_h(contador);
		}
		if (contador == 2) {
			mes_actual = time_h(contador);
		}
			
	}
	//comienzo de lo q se ve en el programa al ejecutarlo
	printf("\t\t\t\tBienvenido al centro Medico ETSIDI ''Capricornio''\n\nPresione una tecla cualquiera para continuar.\n");
	c = _getch();
	system("cls");//limpia la pantalla de la consola
	do //este do while general me asegura que el menu vaya correctamente
	{
		//se abre el menu y bos hace elegir las opciones que deseamos
		printf("\nSeleccione la opcion que desea realizar:\n\n1 visualizar los datos de un doctor del hospital.\n2 visualizar los datos de un paciente del hospital.\n3 introducir los datos de un nuevo paciente.\n4 salir.");
		t = leer_entero();
		system("cls");
		if (t == 1 || t == 2 || t == 3 || t == 4) //se asegura de solo meterte en el menu si has introducido un valor correcto
		{
			if (t == 1)//primera opcion del menu principal
			{
				//entra el codigo de arduido que solo te permite continuar esta parte si introduces una huella dactilar en el lector valida(solo lo son las de los doctores ya introducidas) y se cumple, led-->verde, sino, rojo
				Arduino = new Serial((char*)puerto);

				while (Arduino->IsConnected())
				{
					sprintf_s(secuencia, "%d", count);
					
					char BufferSalida[200] = "huella";
					Arduino->WriteData(BufferSalida, strlen(BufferSalida));
					count++;
					if (count == 1)
						Sleep(4000);
					else
						Sleep(4000);
					bytesRecibidos = Arduino->ReadData(BufferEntrada, sizeof(char) * 199);
					if (bytesRecibidos != -1)
					{
						BufferEntrada[bytesRecibidos - 1] = '\0';
						comp = strcmp(BufferEntrada, BufferSalida);
						if (comp==1) {
							printf("No se ha recibido nada\n");
							Sleep(1000);
							break;
						}
						else {
							printf("Huella: %s\n", BufferEntrada);
							//se continua con el menu secundario de los doctores
							printf("seleccione el doctor/accion:\n1 Dr. Pablo Van Den Bos.\n2 Dr. Javier Tovar.\n3 Dr. Jaime Torres.\n4. crear una cuenta de un doctor.\n");
							d = leer_entero();
							system("cls");
							if (d == 1)//te mete al primer doctor
							{
								intro_1(&cuenta1);//te pide la conraseña del doctor en particular para acceder
								//declaro las variables de la estructura
								doctor vanden = { "Pablo", "Van Den Bos de Lucas", "Alberto Valcarcel Gonzalez y Diana Cruz Ramos", "D34", "pablovandenden@gmail.com", 20 };

								ocupacion_docv(hora);//traigo de la funcion lo que esta realizando el doctor en este momento

								printf("\nEl Dr. %s %s tiene %d a%cos, atiende a pacientes en la sala %s, su correo es %s y sus pacientes son %s", vanden.nombre, vanden.apellidos, vanden.edad, ñ, vanden.sala, vanden.correo, vanden.pacientes);
								//se da la opcion de añadir un nuevo paciente a un doctor, o no hacerlo
								printf("\nSi desea introducir un nuevo paciente teclee 'nuevo paciente'+intro, sino presiona intro.");//quiero que me coja espacios

								gets_s(newpac); //coge la condicion para introducir a un paciente

								if (strcmp(newpac, "nuevo paciente") == 0 || (strcmp(newpac, "NUEVO PACIENTE") == 0 || (strcmp(newpac, "nuevopaciente") == 0)))//quiero usar la string.h para añadir a vanden.pacientes nuevos datos con esto
								{
									vanden.pacientes;
									printf("\nIntroduce el paciente (Nombre Apellidos) que desea a%cadir al historial del Dr. %s:", ñ, vanden.apellidos);
									gets_s(paciente_v);
									//coge al paciente y a continuacion lo superpone a la cadena de caracteres de los pacientes del doctor
									strcat_s(paciente_v, ", ");
									strcat_s(paciente_v, vanden.pacientes);
									system("cls");
									printf("\nLos datos se han actualiado con exito.");//quiero meter lo que esta haciendo ahora mismo en los datos

									printf("\nEl Dr. %s %s tiene %d a%cos,\natiende a pacientes en la sala %s, su correo es %s y sus pacientes actualizados son:\n%s\n", vanden.nombre, vanden.apellidos, vanden.edad, ñ, vanden.sala, vanden.correo, paciente_v);
									
								}
								
								printf("\nPresione cualquier tecla para continuar.");
								c = _getch();
								system("cls");//vuelvo al menu principal
							}
							if (d == 2)//se repite el proceso anterior pero para el siguiente doctor
							{
								intro_1(&cuenta1);
								doctor javi = { "Javier", "Tovar Castro", "Alvaro Sanchez Barba y Pedro Gomez Blesa", "D36", "javitovar@gmail.com", 20 };

								ocupacion_docj(hora);

								printf("\nEl Dr. %s %s tiene %d a%cos, atiende a pacientes en la sala %s, su correo es %s y sus pacientes son %s", javi.nombre, javi.apellidos, javi.edad, ñ, javi.sala, javi.correo, javi.pacientes);
								printf("\nSi desea introducir un nuevo paciente teclee 'nuevopaciente'+intro ");//quiero que me coja espacios
								gets_s(newpac); //no lo coje
							
								if (strcmp(newpac, "nuevo paciente") == 0 || (strcmp(newpac, "NUEVO PACIENTE") == 0 || (strcmp(newpac, "nuevopaciente") == 0)))//quiero usar la string.h para añadir a vanden.pacientes nuevos datos con esto
								{
									javi.pacientes;
									printf("\nIntroduce el paciente (Nombre Apellidos) que desea a%cadir al historial del Dr. %s: ", ñ, javi.apellidos);
									gets_s(paciente_jav);
									strcat_s(paciente_jav, ", ");
									strcat_s(paciente_jav, javi.pacientes);
									system("cls");
									printf("\nLos datos se han actualiado con exito.");//quiero meter lo que esta haciendo ahora mismo en los datos

									printf("\nEl Dr. %s %s tiene %d a%cos,\natiende a pacientes en la sala %s, su correo es %s y sus pacientes actualizados son:\n%s\n", javi.nombre, javi.apellidos, javi.edad, ñ, javi.sala, javi.correo, paciente_jav);
									
								}
								printf("\nPresione cualquier tecla para continuar.");
								c = _getch();
								system("cls");
							}
							if (d == 3)//lo mismo para el tercer doctor
							{
								intro_1(&cuenta1);
								doctor jaime = { "Jaime", "Torres Abad", "Adrian Moya Castro y Maria Lopez Garcia", "D38", "jaimetorres@gmail.com", 19 };
								ocupacion_docjm(hora);

								printf("\nEl Dr. %s %s tiene %d a%cos, atiende a pacientes en la sala %s, su correo es %s y sus pacientes son %s", jaime.nombre, jaime.apellidos, jaime.edad, ñ, jaime.sala, jaime.correo, jaime.pacientes);
								printf("\nSi desea introducir un nuevo paciente teclee 'nuevopaciente'+intro ");//quiero que me coja espacios
								gets_s(newpac); 
								if (strcmp(newpac, "nuevo paciente") == 0 || (strcmp(newpac, "NUEVO PACIENTE") == 0 || (strcmp(newpac, "nuevopaciente") == 0)))//quiero usar la string.h para añadir a vanden.pacientes nuevos datos con esto
								{
									jaime.pacientes;
									printf("\nIntroduce el paciente (Nombre Apellidos) que desea a%cadir al historial del Dr. %s: ", ñ, jaime.apellidos);
									gets_s(paciente_jm);
									strcat_s(paciente_jm, ", ");
									strcat_s(paciente_jm, jaime.pacientes);
									system("cls");
									printf("\nLos datos se han actualiado con exito.");//quiero meter lo que esta haciendo ahora mismo en los datos

									printf("\nEl Dr. %s %s tiene %d a%cos,\natiende a pacientes en la sala %s, su correo es %s y sus pacientes actualizados son:\n%s\n", jaime.nombre, jaime.apellidos, jaime.edad, ñ, jaime.sala, jaime.correo, paciente_jm);
									
								}
								printf("\nPresione cualquier tecla para continuar.");
								c = _getch();
								system("cls");
							}
							if (d == 4)//se crea la cuenta de un nuevo doctor, con toda su informacion
							{
								Cuenta cuenta1;
								//para crear la cuenta se usan todas las funciones ya comentadas antes del main
								med_1(&cuenta1);
								nac_2(&cuenta1);
								fech_inv(cuenta1);
								nac_1(cuenta1);
								nac_2(&cuenta1);
								med_3(cuenta1);
								med_2(&cuenta1);
								intro_1(&cuenta1);
							}
						}
					else//si el arduino no recibe lo esperado
						printf("No se ha recibido nada\n");
					Sleep(1000);
				}


			if (t == 2)//pasamos a la segunda opcion del menu principal, la informacion de los pacientes
			{
				//se aplica un codigo de arduino que lee las tarjetas de los pacientes, sino no se puede continuar->led rojo, si se cumple en verde
				Arduino = new Serial((char*)puerto);

				while (Arduino->IsConnected())
				{
					sprintf_s(secuencia, "%d", count);
					//gets_s(BufferSalida);
					//printf("Enviando %s\n", BufferSalida);
					char BufferSalida[200] = "tarjeta";
					Arduino->WriteData(BufferSalida, strlen(BufferSalida));
					count++;
					if (count == 1)
						Sleep(4000);
					else
						Sleep(4000);
					bytesRecibidos = Arduino->ReadData(BufferEntrada, sizeof(char) * 199);
					if (bytesRecibidos!=-1)
					{
						BufferEntrada[bytesRecibidos - 1] = '\0';
						comp = strcmp(BufferEntrada, BufferSalida);
						if (comp==1) {
						printf("No se ha recibido nada\n");
							Sleep(1000);
							break;
						}
						else{
							printf("Tarjeta ID: %s\n", BufferEntrada);
							//volvemos al segundo menu, el de los pacientes
							printf("seleccione el paciente:\n1 Alberto Valcarcel.\n2 Diana Cruz Ramos.\n3 Alvaro Sanchez.\n4 Pedro Gomez Blesa.\n5 Adrian Moya Castro.\n6 Maria Lopez Garcia\n7 Crear una nueva cuenta de un paciente.");
							e = leer_entero();
							system("cls");
							
							if (e == 1)//primer paciente
							{
								//inicializamos todas las variables de la estructura de pacientes
								paciente alberto = { "Alberto","Valcarcel Gonzalez","Hernia lumbar","Observación y Cirujia","Nada",19,13,7,02 };
								dias_ingresado = dias_ingreasdo(&alberto, dia_actual, mes_actual);//llamo a la funcion para saber cuantos dias lleva ingresado este apciente
								//imprimo en la pantalla de la consola toda la informacion
								printf("\nEl paciente %s %s, con estancia en la habitacion %d y %d a%cos de edad, sufre %s y el tratamiento a seguir es %s. El paciente fue ingresado el dia %d/%d, por lo que lleva ingresado %d dias y es alergico a %s\n\n", alberto.nombre, alberto.apellidos, alberto.habitacion, alberto.edad, ñ, alberto.sintomas, alberto.tratamientos, alberto.dia, alberto.mes, dias_ingresado, alberto.alergias);

							}
							if (e == 2)//segundo paciente, lo mismo que ne le primero
							{
								paciente diana = { "Diana","Cruz Ramos","Fractura de femur","Inmovilicacion del hueso mediante ferula","Latex y polen",29,12,21,05 };
								dias_ingresado = dias_ingreasdo(&diana, dia_actual, mes_actual);
								printf("\nEl paciente %s %s, con estancia en la habitacion %d y %d a%cos de edad, sufre %s y el tratamiento a seguir es %s. El paciente fue ingresado el dia %d/%d, por lo que lleva ingresado %d dias y es alergico a %s\n\n", diana.nombre, diana.apellidos, diana.habitacion, diana.edad, ñ, diana.sintomas, diana.tratamientos, diana.dia, diana.mes, dias_ingresado, diana.alergias);

							}
							if (e == 3)//tercer pac
							{
								paciente alvaro = { "Alvaro","Sanchez Barba","Diarrea cronica","Metronidazol y reestablecimiento de dieta","Niquel",19,17,13,05 };
								dias_ingresado = dias_ingreasdo(&alvaro, dia_actual, mes_actual);
								printf("\nEl paciente %s %s, con estancia en la habitacion %d y %d a%cos de edad, sufre %s y el tratamiento a seguir es %s. El paciente fue ingresado el dia %d/%d, por lo que lleva ingresado %d dias y es alergico a %s\n\n", alvaro.nombre, alvaro.apellidos, alvaro.habitacion, alvaro.edad, ñ, alvaro.sintomas, alvaro.tratamientos, alvaro.dia, alvaro.mes, dias_ingresado, alvaro.alergias);

							}
							if (e == 4)//cuarto apc
							{
								paciente pedro = { "Pedro","Gomez Blesa","Calculos Renales","Analisis de orina y litotricia extracorporea por ondas de choque (LEOCH)","Caspa animal",67,14,9,03 };
								dias_ingresado = dias_ingreasdo(&pedro, dia_actual, mes_actual);
								printf("\nEl paciente %s %s, con estancia en la habitacion %d y %d a%cos de edad, sufre %s y el tratamiento a seguir es %s. El paciente fue ingresado el dia %d/%d, por lo que lleva ingresado %d dias y es alergico a %s\n\n", pedro.nombre, pedro.apellidos, pedro.habitacion, pedro.edad, ñ, pedro.sintomas, pedro.tratamientos, pedro.dia, pedro.mes, dias_ingresado, pedro.alergias);

							}
							if (e == 5)//quinto pac
							{
								paciente adrian = { "Adrian","Moya Castro","Edema pulmonar","Administracíon de oxigeno y farmacos broncodilatadores","Nada",43,10,28,04 };
								dias_ingresado = dias_ingreasdo(&adrian, dia_actual, mes_actual);
								printf("\nEl paciente %s %s, con estancia en la habitacion %d y %d a%cos de edad, sufre %s y el tratamiento a seguir es %s. El paciente fue ingresado el dia %d/%d, por lo que lleva ingresado %d dias y es alergico a %s\n\n", adrian.nombre, adrian.apellidos, adrian.habitacion, adrian.edad, ñ, adrian.sintomas, adrian.tratamientos, adrian.dia, adrian.mes, dias_ingresado, adrian.alergias);

							}
							if (e == 6)//sexto pac
							{
								paciente maria = { "Maria","Lopez Garcia","Aiabetes y Artosis","Aplicacion de endocrinologia y terapia interarticular","Gramineas, picaduras de insectos y acaros",89,19,10,01 };
								dias_ingresado = dias_ingreasdo(&maria, dia_actual, mes_actual);
								printf("\nEl paciente %s %s, con estancia en la habitacion %d y %d a%cos de edad, sufre %s y el tratamiento a seguir es %s. El paciente fue ingresado el dia %d/%d, por lo que lleva ingresado %d dias y es alergico a %s\n\n", maria.nombre, maria.apellidos, maria.habitacion, maria.edad, ñ, maria.sintomas, maria.tratamientos, maria.dia, maria.mes, dias_ingresado, maria.alergias);

							}
							if (e == 7)//se crea la cuenta de un nuevo paciente, con toda l ainformacion
							{

							}
						}
					else
						printf("No se ha recibido nada\n");
						Sleep(1000);
						break;//por si arduino no recibe una tarjeta
				}
		}
		else {
			printf("se ha introducido un valor incorrecto.\n");//si en el menu principal se escoge un valor fuera del menu, salta aqui y lo vuelve a pedir
		}
		//system("cls");
	} while (t != 4);//con esat condicion mata el programa
	printf("\t\t\t\tGracias por usar nuestro programa.");//menasje de despedida que parece en pantalla
}//fin del main
int leer_entero(void) { //con esta funcion evito sobrecargas al leer enteros y que quede en bucle el programa
	char cadena[2];
	int numero;
	gets_s(cadena);
	numero = atoi(cadena);//si hay un entero en la cadena se le asigana a num, sino, le asigna 0.
	return (numero);
}
int time_h(int contador) //con esta funcion saco, de todo el codigo de la time.h las variables que me interesan
{
	int dia_actual, quiero = 0;
	struct tm newtime;
	__time64_t long_time;
	char timebuf[26];
	int mes;
	errno_t err;

	// Get time as 64-bit integer.
	_time64(&long_time);
	// Convert to local time.
	err = _localtime64_s(&newtime, &long_time);
	if (err)
	{
		printf("Invalid argument to _localtime64_s.");
		return 0;
	}

	// Convert to an ASCII representation.
	err = asctime_s(timebuf, 26, &newtime);
	if (err)
	{
		printf("Invalid argument to asctime_s.");
		return 0;
	}
	//printf("%.19s \n", timebuf);
	//printf("%d\n", newtime.tm_hour);//esta es la hora
	//printf("%d", newtime.tm_mday);//esta variable es el dia del mes
	//printf("\n%d", newtime.tm_mon);//mes del año empezando en 0
	mes = newtime.tm_mon + 1;
	//printf("\n%d", mes);//mes del año empezando en enero=1 
	dia_actual = newtime.tm_mday;
	//printf("%d", dia_actual);
	//for (contador = 0; contador < 3; contador++) //dia_actual, mes_actual, hora
	
	if (contador == 0)
			quiero = newtime.tm_hour;
	if (contador == 1)
			quiero = newtime.tm_mday;
	if (contador == 2)
			quiero = mes;
	
	return(quiero);
}
void ocupacion_docv(int hora) //traslado al main la accion que esta realizando un cierto doctor en el momento en el que se ejecuta el programa
{
	if (hora < 10 || hora >= 19) {
		char realizando[] = "El Dr. Van Den Bos no se encuentra en su horario de trabajo.";//para guardar lo que esta haciendo
		puts(realizando);
	}
	if (hora >= 10 && hora < 13) {
		char realizando[] = "El Dr.Van Den Bos se encuentra atendiendo pacientes.";
		puts(realizando);
	}
	if (hora >= 13 && hora < 15) {
		char realizando[] = "El Dr. Van Den Bos se encuentra en su hora de descanso para comer.";
		puts(realizando);
	}
	if (hora >= 15 && hora < 19) {
		char realizando[] = "El Dr. Van Den Bos esta en una reunion.";
		puts(realizando);
	}
}
void ocupacion_docj(int hora)
{
	if (hora < 7 || hora >= 17) {
		char realizando[] = "El Dr. Tovar no se encuentra en su horario de trabajo.";//para guardar lo que esta haciendo
		puts(realizando);
	}
	if (hora >= 7 && hora < 13) {
		char realizando[] = "El Dr. Tovar se encuentra atendiendo pacientes.";
		puts(realizando);
	}
	if (hora >= 13 && hora < 14) {
		char realizando[] = "El Dr. Tovar se encuentra en su hora de descanso para comer.";
		puts(realizando);
	}
	if (hora >= 14 && hora < 17) {
		char realizando[] = "El Dr. Tovar esta en una reunion.";
		puts(realizando);
	}
}
void ocupacion_docjm(int hora)
{
	if (hora < 9 || hora >= 19) {
		char realizando[] = "El Dr. Torres no se encuentra en su horario de trabajo.";//para guardar lo que esta haciendo
		puts(realizando);
	}
	if (hora >= 10 && hora < 13) {
		char realizando[] = "El Dr.Torres se encuentra atendiendo pacientes.";
		puts(realizando);
	}
	if (hora >= 13 && hora < 14) {
		char realizando[] = "El Dr. Torres se encuentra en su hora de descanso para comer.";
		puts(realizando);
	}
	if (hora >= 15 && hora < 19) {
		char realizando[] = "El Dr. Torres se encuentra en el area de urgencias.";
		puts(realizando);
	}
}

void intro_1(Cuenta* cuenta1) { //se crea la cuenta de un doctor
	do {
		system("cls");
		printf("\n\t\t\tIntroduzca sus credenciales\n");
		printf("\n\tUSUARIO: ");
		gets_s(cuenta1->usuario);
		printf("\n\tCLAVE: ");
		gets_s(cuenta1->clave);
		cuenta1->k = 0;

		if (strcmp(cuenta1->usuario, USUARIO1) == 0 && strcmp(cuenta1->clave, CONTRASEÑA1) == 0 || strcmp(cuenta1->usuario, USUARIO2) == 0 && strcmp(cuenta1->clave, CONTRASEÑA2) == 0 || strcmp(cuenta1->usuario, USUARIO3) == 0 && strcmp(cuenta1->clave, CONTRASEÑA3) == 0 || strcmp(cuenta1->usuario, cuenta1->re_usuario) == 0 && strcmp(cuenta1->clave, cuenta1->post_clave) == 0) {
			cuenta1->intento = 1;

		}
		else {
			printf("\nEl nombre de usuario y/o la clave no son correctos\n");
			cuenta1->k++;
			printf("\nHa consumido %d de sus 5 intentos\n", cuenta1->k);
			getchar();
		}

	}

	while (cuenta1->k < INTENTOSMAX && cuenta1->intento == 0);

	if (cuenta1->intento == 1) {
		printf("\n\n\tBienvenido Doctor\n\n\n");

	}
	else {
		printf("\n\nHa alcanzado el numero maximo de intentos\n\n\n");
	}
}
//Definimos las funciones 
void med_1(Cuenta* cuenta1) {
	printf("Escriba los datos que se le piden a continuación\n");
	printf("NOMBRE:");
	gets_s(cuenta1->nombre);

	printf("APELIIDOS:");
	gets_s(cuenta1->apellidos);

	printf("CORREO ELECTR%cNICO:", cuenta1->om);
	gets_s(cuenta1->correo);
	cuenta1->j = 0;
	printf("FECHA DE NACIMIENTO (dia mes a%co): ", cuenta1->nym);
	scanf_s("%d%d%d", &cuenta1->dia, &cuenta1->mes, &cuenta1->año);
	cuenta1->intento = 0;
	//Comprobamos si las fechas son validas
}
void med_2(Cuenta* cuenta1) {

	printf("USUARIO: tu usuario por defecto es %s\n", cuenta1->nombre);

	printf("CONTRASE%cA (minimo 8 caracteres):", cuenta1->ny);
	gets_s(cuenta1->post_clave);
	getchar();
	cuenta1->m = 0;
	cuenta1->j = 0;
	cuenta1->largo = 0;
	while (cuenta1->post_clave[cuenta1->j] != '\0')
	{
		cuenta1->largo++;
		if (cuenta1->post_clave[cuenta1->j] == ' ')
			cuenta1->largo--;
		cuenta1->j++;
	}

	if (cuenta1->largo < 9) {
		printf("OBLIGATORIO 8 CARACTERES\n");
		printf("CONTRASE%cA (minimo 8 caracteres): ", cuenta1->ny);
		gets_s(cuenta1->post_clave);
	}

	printf("CONFIRMAR CONTRASE%cA: ", cuenta1->ny);
	gets_s(cuenta1->re_clave);

	if (strcmp(cuenta1->post_clave, cuenta1->re_clave) == 0) //&& strcmp(cuenta1->contraseña, cuenta1->re_clave) == 0
		cuenta1->m = 1;
	
	else {
		printf("Las contraseñas no coinciden");
		printf("\nREPETIR CONTRASE%cA:", cuenta1->ny);
		gets_s(cuenta1->re_clave);
	}
	if (cuenta1->m == 1) {
		printf("Pulse cualquier tecla para continuar");
		cuenta1->k = getchar();
	}

	/*printf("Si desea consultar su perfil, introduzca su usuario y contraseña");
	scanf_s(" &d", &cuenta1->k);*/
	
}
void nac_2(Cuenta* cuenta1)
{
	int dias_mes[] = { 0, 31, 28, 31, 30,
							31, 30, 31, 31,
							 30, 31, 30, 31 };

	cuenta1->fecha_invalida = 's';
	if (cuenta1->mes < 1 || cuenta1->mes > 12) {
		cuenta1->fecha_invalida = 'n';
		cuenta1->k++;

	}
	if (cuenta1->dia < 1 || cuenta1->dia > dias_mes[cuenta1->mes]) {
		cuenta1->fecha_invalida = 'n';
		cuenta1->k++;
	}
	if (cuenta1->k == 3) {
		printf("Se ha llegado al máximo de iteraciones");
		system("cls");
	}

	cuenta1->edad = AÑO_ACTUAL - cuenta1->año;
}
void med_3(Cuenta cuenta1) {
	cuenta1.tlf = 0;
	printf("TEL%cFONO:", cuenta1.em);
	scanf_s("%d", &cuenta1.tlf);


	cuenta1.intento = 1;
	while (cuenta1.tlf >= 10)
	{
		cuenta1.tlf = cuenta1.tlf /= 10;
		cuenta1.intento++;
	}

	if (cuenta1.intento <= 8) {
		printf("\nNumero de telefono incorrecto");
		printf("\nIntroduzca nuevamente su numero de telefono (9 caracteres)");
		printf("TEL%cFONO:", cuenta1.em);
		scanf_s("%d", &cuenta1.tlf);

	}
}


void nac_1(Cuenta cuenta1)
{
	printf("Edad:  %d\n", cuenta1.edad);
}

void fech_inv(Cuenta cuenta1) {
	for (cuenta1.k = 0; cuenta1.k < 4; cuenta1.k++) {

		if (cuenta1.fecha_invalida == 'n') {
			printf("Fecha invalida");
			printf("\nIntroduzca nuevamente los datos (dia mes año):");
			scanf_s("%d%d%d", &cuenta1.dia, &cuenta1.mes, &cuenta1.año);
			nac_2(&cuenta1);
		}
		if (cuenta1.fecha_invalida == 3)
			printf("Ha gastado el maximo de intentos");
	}

}
int dias_ingreasdo(paciente* paci, int dia_actual, int mes_actual) //con esta funcion contabilizo los dias que lleva ingresado un paciente de la lista de pacientes y lo devuelvo al main
{
	int mes_ingreso = paci->mes, dia_ingreso = paci->mes, dias_ingresado = 0, i, pat, dias_mes;//declaro las variables que voy a necesitar
	int en = 31, feb = 28, mar = 31, ab = 30, may = 31, jun = 30, jul = 31, ag = 31, sep = 30, oct = 31, nov = 30, dic = 31;//declaro todas las variables con los dias de cada mes
	//paci->mes = mes_ingreso;
	//paci->dia = dia_ingreso;
	mes_ingreso = paci->mes;
	dia_ingreso = paci->dia;

	if (mes_ingreso == mes_actual)
	{
		dias_ingresado = dia_actual - dia_ingreso;	
	}

	if (mes_ingreso < mes_actual)
	{
		for (i = mes_ingreso; i < mes_actual + 1; i++)
		{
			if (i == 1)
			{
				dias_mes = en;
			}
			if (i == 2)
			{
				dias_mes = feb;
			}
			if (i == 3)
			{
				dias_mes = mar;
			}
			if (i == 4)
			{
				dias_mes = ab;
			}
			if (i == 5)
			{
				dias_mes = may;
			}
			if (i == 6)
			{
				dias_mes = jun;
			}
			if (i == 7)
			{
				dias_mes = jul;
			}
			if (i == 8)
			{
				dias_mes = ag;
			}
			if (i == 9)
			{
				dias_mes = sep;
			}
			if (i == 10)
			{
				dias_mes = oct;
			}
			if (i == 11)
			{
				dias_mes = nov;
			}
			if (i == 12)
			{
				dias_mes = dic;
			}
			if (i == mes_actual)
				pat = dias_mes;
			if (i == mes_ingreso)
			{
				dias_ingresado = dias_ingresado + (dias_mes - dia_ingreso);
			}
			else {
				dias_ingresado = dias_ingresado + dias_mes;
			}
		}
		dias_ingresado = dias_ingresado - (pat - dia_actual);
		
	}
	return(dias_ingresado);
}
